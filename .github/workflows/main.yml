name: "baker build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: baker

      - name: golangci-lint cache
        uses: actions/cache@v4
        with:
          path: cache-golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('.golangci.yml') }}-main

      - name: go mod cache
        uses: actions/cache@v4
        with:
          path: go-pkg-mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}-main

      - name: go build cache
        uses: actions/cache@v4
        with:
          path: cache-go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}-main

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "cache-golangci-lint": "/root/.cache/golangci-lint",
              "go-pkg-mod": "/go/pkg/mod",
              "cache-go-build": "/root/.cache/go-build"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: ensure cache directories exist
        run: |
          mkdir -p /tmp/.docker-compose-cache

      - name: cache docker compose images
        uses: actions/cache@v4
        with:
          path: /tmp/.docker-compose-cache
          key: ${{ runner.os }}-docker-compose-${{ hashFiles('docker-compose.yaml') }}
          restore-keys: |
            ${{ runner.os }}-docker-compose-

      - name: pull and cache postgres image
        if: steps.docker-compose-cache.outputs.cache-hit != 'true'
        run: |
          docker pull postgres:17
          docker save -o /tmp/.docker-compose-cache/postgres.tar postgres:17

      - name: Load cached Postgres image
        run: |
          if [ -f "/tmp/.docker-compose-cache/postgres.tar" ]; then
            docker load -i /tmp/.docker-compose-cache/postgres.tar
          fi

      - name: prepare test environment
        run: |
          docker compose up -d postgres
          GATEWAY_IP=$(docker inspect $(docker compose ps --format json | jq -r '.Name') | jq -r '.[].NetworkSettings.Networks.baker_default.Gateway')
          echo "DATABASE_URL=postgres://user:password@$GATEWAY_IP:2345/database" >> $GITHUB_ENV

      - name: build image
        uses: docker/bake-action@v5
        with:
          push: ${{ github.ref == 'refs/heads/main'}}

      - name: release image
        if: github.ref == 'refs/heads/main'
        uses: docker/bake-action@v5
        with:
          targets: release
          push: true