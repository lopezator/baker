name: "cache-test build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CACHE: invalidate-cache-15
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: Build

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            root-cache-golangci-lint
            root-cache-go-build
            go-pkg-mod
          key: cache-${{ hashFiles('.github/workflows/main.yml') }}

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "root-cache-golangci-lint": "~/.cache/golangci-lint",
              "root-cache-go-build": "~/.cache/go-build",
              "go-pkg-mod": "/go/pkg/mod"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: docker-login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: prepare
        run: |
          docker buildx build --target prepare -t cache-test:build -f Dockerfile.build --cache-from=type=gha --cache-to=type=gha,mode=max .

      - name: sanity-check
        run: |
          docker buildx build --target sanity-check -t cache-test:build -f Dockerfile.build --cache-from=type=gha --cache-to=type=gha,mode=max .

      - name: build
        run: docker buildx build --target build -t cache-test:build -f Dockerfile.build --cache-from=type=gha --cache-to=type=gha,mode=max .