name: "cache-test build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CACHE: invalidate-cache-18
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: cache-test

      - name: golangci-lint cache
        uses: actions/cache@v4
        id: golangci-lint-cache-restore
        with:
          path: cache-golangci-lint
          key: ${{ runner.os }}-${{ hashFiles('.go-builder/.golangci.yml') }}-main
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('.go-builder/.golangci.yml') }}-
            ${{ runner.os }}-

      - name: go mod cache
        uses: actions/cache@v4
        id: go-mod-cache-restore
        with:
          path: go-pkg-mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}-main
          restore-keys: |
            ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-mod-

      - name: go build cache
        uses: actions/cache@v4
        id: go-build-cache-restore
        with:
          path: cache-go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}-main
          restore-keys: |
            ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-build-

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "cache-golangci-lint": "/root/.cache/golangci-lint",
              "go-pkg-mod": "/go/pkg/mod",
              "cache-go-build": "/root/.cache/go-build"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: prepare
        run: docker buildx build -f Dockerfile.build --target prepare --cache-from=type=gha --cache-to=type=gha,mode=max .

      - name: sanity-check
        run: docker buildx build -f Dockerfile.build --target sanity-check --cache-from=type=gha --cache-to=type=gha,mode=max .

      - name: build
        run: docker buildx build -f Dockerfile.build --target build --cache-from=type=gha --cache-to=type=gha,mode=max .

      - name: copy binary
        run: docker cp $(docker create cache-test-build):/usr/local/bin/cache-test build/container/cache-test-linux-amd64

      - name: release
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: build/container/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
